public class ThreadJoinAndSleep {
    public static void main(String[] args) {
        Thread thread1 = new Thread(new Runnable() {
            @Override
            public void run() {
                int number = 10; // Even number
                if (isEven(number)) {
                    System.out.println("Thread 1 contains even number, joining...");
                    try {
                        Thread.sleep(10000); // Sleep for 10 seconds
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    System.out.println("Thread 1 contains odd number, not joining.");
                }
            }
        });

        Thread thread2 = new Thread(new Runnable() {
            @Override
            public void run() {
                int number = 20; // Even number
                if (isEven(number)) {
                    System.out.println("Thread 2 contains even number, joining...");
                    try {
                        Thread.sleep(5000); // Sleep for 5 seconds
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                } else {
                    System.out.println("Thread 2 contains odd number, not joining.");
                }
            }
        });

        thread1.start();
        thread2.start();

        try {
            thread1.join();
            thread2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Both threads have finished.");
    }

    private static boolean isEven(int number) {
        return number % 2 == 0;
    }
}
